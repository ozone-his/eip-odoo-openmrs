services:

  # Odoo
  odoo:
    depends_on:
      postgresql:
        condition: service_healthy
    environment:
      - HOST=postgresql
      - USER=odoo
      - PASSWORD=password
      - ADDONS=sale_management,stock,account_account,purchase,mrp,odoo_initializer,ozone_settings,mrp_product_expiry,product_expiry,l10n_generic_coa
      - INITIALIZER_DATA_FILES_PATH=/mnt/odoo_config
      - INITIALIZER_CONFIG_FILE_PATH=/mnt/odoo_config/initializer_config.json
    image: mekomsolutions/odoo:14-1.0.0
    ports:
      - '8069:8069'
    restart: unless-stopped
    volumes:
      - "odoo-filestore:/var/lib/odoo/filestore"
      - "../distro/binaries/odoo/addons:/mnt/extra-addons"
      - "../distro/configs/odoo/initializer_config/:/mnt/odoo_config"
      - "../distro/configs/odoo/config/odoo.conf:/etc/properties/odoo.conf"
      - "odoo-checksums:/mnt/checksums"

  postgresql:
    command: "postgres -c wal_level=logical -c max_wal_senders=10 -c max_replication_slots=10"
    image: postgres:13
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    restart: unless-stopped
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      ODOO_DB_NAME: odoo
      ODOO_DB_USER: odoo
      ODOO_DB_PASSWORD: password
    volumes:
      - "postgresql-data:/var/lib/postgresql/data"
      - "../distro/data/postgresql/create_db.sh:/docker-entrypoint-initdb.d/create_db.sh"
      - "../distro/data/postgresql/odoo:/docker-entrypoint-initdb.d/db/odoo"

volumes:
  postgresql-data: ~
  odoo-checksums: ~
  odoo-filestore: ~
  odoo-web-data: ~
